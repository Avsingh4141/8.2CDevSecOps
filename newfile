pipeline {
  agent any
  environment {
    // add SONAR_TOKEN in credentials if you will use SonarCloud later
    // SONAR_TOKEN = credentials('SONAR_TOKEN') // uncomment when used
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/<your_github_username>/8.2CDevSecOps.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh '''
          npm install --no-audit --no-fund || true
        '''
      }
    }

    stage('Run Tests') {
      steps {
        // save test output to file and allow pipeline to continue if tests fail
        sh '''
          npm test 2>&1 | tee test-output.txt || true
        '''
        archiveArtifacts artifacts: 'test-output.txt', allowEmptyArchive: true
      }
    }

    stage('Generate Coverage Report') {
      steps {
        sh '''
          npm run coverage 2>&1 | tee coverage-output.txt || true
        '''
        archiveArtifacts artifacts: 'coverage/**, coverage-output.txt', allowEmptyArchive: true
      }
    }

    stage('NPM Audit (Security Scan)') {
      steps {
        sh '''
          npm audit --json > npm-audit.json || true
          cat npm-audit.json | jq '.' || true
        '''
        archiveArtifacts artifacts: 'npm-audit.json', allowEmptyArchive: true
      }
    }
  }

  post {
    always {
      // stash workspace logs for download
      sh 'tar -czf pipeline-logs.tar.gz test-output.txt npm-audit.json || true'
      archiveArtifacts artifacts: 'pipeline-logs.tar.gz', allowEmptyArchive: true
    }
  }
}
